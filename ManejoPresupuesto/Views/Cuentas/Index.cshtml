@model IEnumerable<IndiceCuentasViewModel>
@{
    ViewData["Title"] = "Cuentas";

    string FormateaBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string ObtenerClaseBalance(decimal balance)
    {
        return balance > 0 ? "activo" : "pasivo";
    }
}

<h1>Cuentas</h1>
<a asp-action="Crear" class="btn btn-primary mb-3">Crear Nuevo</a>

<div class="contenedor-totales mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
            @FormateaBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Pasivos</strong>
        </div>
        <div class="pasivo">
            @FormateaBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            @FormateaBalance(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion acordeon-cuentas">
    @foreach(var tipoCuenta in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="cabeceraUno">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var claseTipoCuenta = ObtenerClaseBalance(tipoCuenta.Balance);

                }
                <button class="accordion-button" type="button" data-bs-toogle="collapse" 
                data-bs-target="@dataBSTarget">
                <span class="me-3">
                    <span><strong>@tipoCuenta.TipoCuenta</strong></span>
                </span>
                </button>
            </h2>
        </div>
    }
</div>